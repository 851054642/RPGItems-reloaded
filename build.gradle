plugins {
    id 'java-library'
    id 'maven-publish'
}

ext.majorVersion = 3
ext.minorVersion = 6
ext.minecraftVersion = "1.13.2"

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    // mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        name 'Spigot'
        url 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }

    maven {
        name 'Sonatype'
        url 'https://oss.sonatype.org/content/groups/public'
    }

    maven {
        name 'sk89q'
        url "http://maven.sk89q.com/repo/"
    }

    maven {
        name 'NyaaCentral'
        url 'https://raw.githubusercontent.com/NyaaCat/NyaaCentral/maven-repo'
    }

    maven {
        name 'vault-repo'
        url 'http://nexus.hc.to/content/repositories/pub_releases'
    }
}

dependencies {
    // compileOnly files('lib/spigot-1.13.2.jar')
    // compileOnly files('lib/patched_1.13.2.jar')
    api "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT"
    api 'cat.nyaa:nyaacore:6.3-SNAPSHOT'

    compileOnly 'io.netty:netty-all:4.1.25.Final' // netty is shadowed inside spigot jar

    // implementation files('lib/worldedit-bukkit-7.0.0-SNAPSHOT-dist.jar')
    // implementation files('lib/worldguard-legacy-7.0.0-SNAPSHOT-dist.jar')

    implementation('com.sk89q.worldguard:worldguard-core:7.0.0-SNAPSHOT')
    implementation('com.sk89q.worldguard:worldguard-legacy:7.0.0-SNAPSHOT') {
        exclude group: 'io.papermc', module: 'paperlib'
        exclude group: 'org.bstats', module: 'bstats-bukkit'
    }

    implementation('com.sk89q.worldedit:worldedit-core:7.0.0-SNAPSHOT')
    implementation('com.sk89q.worldedit:worldedit-bukkit:7.0.0-SNAPSHOT') {
        exclude group: 'io.papermc', module: 'paperlib'
        exclude group: 'org.bstats', module: 'bstats-bukkit'
    }
    implementation 'com.google.code.findbugs:jsr305:1.3.9'
    implementation('net.milkbowl.vault:VaultAPI:1.7') {
        transitive = false
    }
    implementation 'org.librazy:NyaaUtilsLangChecker:2.0-SNAPSHOT'
    annotationProcessor 'org.librazy:NyaaUtilsLangChecker:2.0-SNAPSHOT'
    annotationProcessor "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT"
}

String nyaaCoreLangDir = System.getenv("NYAACORE_LANG_DIR")

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs += ["-Duser.language=en"]
    options.compilerArgs += ["-Xplugin:NyaaUtilsLangAnnotationProcessor", "-Xlint:deprecation", "-Xlint:unchecked"]
    if (nyaaCoreLangDir != null) {
        options.compilerArgs += ["-ALANG_DIR_ADDITIONAL_PATH=" + nyaaCoreLangDir]
    }
}

String fullVersionString = System.getenv("FULL_VERSION_STRING")
boolean releasing = fullVersionString == null ? false : Boolean.parseBoolean(System.getenv("RELEASING"))

publishing {
    publications {
        mavenSnapshot(MavenPublication) {
            from components.java
            // afterEvaluate {
            artifacts = [jar, apiJar, javadocJar, sourcesJar]
            // }
            groupId "cat.nyaa"
            artifactId "rpgitems"
            version "$majorVersion.$minorVersion-mc$minecraftVersion-SNAPSHOT"
        }
        mavenVersion(MavenPublication) {
            from components.java
            // afterEvaluate {
            artifacts = [jar, apiJar, javadocJar, sourcesJar]
            // }
            groupId "cat.nyaa"
            artifactId "rpgitems"
            version "$fullVersionString"
        }
    }
    repositories {
        maven {
            url "$buildDir/repo"
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    onlyIf {
        (publication == publishing.publications.mavenSnapshot) ||
                (releasing && (publication == publishing.publications.mavenVersion))
    }
}

jar {
    classifier = 'release'
}

task apiJar(type: Jar) {
    includeEmptyDirs = false
    from sourceSets.main.output.classesDirs
    include('**/think/rpgitems/Events.class')
    include('**/think/rpgitems/api/')
    include('**/think/rpgitems/item/')
    include('**/think/rpgitems/power/')
    exclude('**/think/rpgitems/power/impl/')
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    (options as StandardJavadocDocletOptions).with {
        links 'https://docs.oracle.com/javase/8/docs/api/'
        links 'https://hub.spigotmc.org/javadocs/spigot/'
        links 'https://google.github.io/guava/releases/21.0/api/docs/'
        links 'https://nyaacat.github.io/NyaaCentral/NyaaCore/6.3-mc1.13.2/javadoc/'
        links 'https://ci.md-5.net/job/BungeeCord/ws/chat/target/apidocs/'
        links 'https://netty.io/4.1/api/index.html'

        locale 'en_US'
        encoding 'UTF-8'
        docEncoding 'UTF-8'
        addBooleanOption('keywords', true)

        def currentJavaVersion = JavaVersion.current()
        if (currentJavaVersion > JavaVersion.VERSION_1_9) {
            options.addBooleanOption('html5', true)
        }

        windowTitle = "RPGItems Javadoc"
        String fullVersion = System.getenv("FULL_VERSION_STRING")
        if (fullVersion != null) {
            docTitle = "<b>RPGItems</b> " + System.getenv("FULL_VERSION_STRING")
        } else {
            docTitle = "<b>RPGItems</b>"
        }
    }
}